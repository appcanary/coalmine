class VulnerabilityManager < ServiceManager
  def create(proto_vuln)
    vuln = Vulnerability.new(proto_vuln)

    begin
      vuln.transaction do
        vuln.save!

        update_affected_packages!(vuln)
      end
    rescue ActiveRecord::RecordInvalid => e
      return Result.new(vuln, e)
    end

    return Result.new(vuln)
  end

  def update(vuln_id, attr)
    vuln = Vulnerability.find(vuln_id)

    begin
      vuln.transaction do
        vuln.update_attributes!(attr)
        update_affected_packages!(vuln)
      end
    rescue ActiveRecord::RecordInvalid => e
      return Result.new(vuln, e)
    end

    return Result.new(vuln)
  end

  def update_affected_packages!(vuln)
    concerned_packages = vuln.concerned_packages
    affected_packages = concerned_packages.select do |package|
      vuln.affects?(package)
    end

    vuln.packages = affected_packages

    ReportMaker.new.on_vulnerability_change(vuln.id)

    vuln
  end


end
