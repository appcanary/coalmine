<a name="create-monitor" class="anchor-offset"></a>
<h1>Monitor API</h1>
  <p>A <em>monitor</em> lets you register a set of packages for us to keep a watch on.</p>

    <p>Send us information on packages on platforms we support, and we will email you updates whenever any of the packages listed have a known vulnerability. It's like registering a server using our agent, but you get complete control of what we're watching and how often it gets updated.</p>

    <h2>Create Request</h2>
    <h4><code>POST https://appcanary.com/api/v3/monitors/:name?platform=:platform&release=:release</code></h4>

    <p>Every monitor has a name unique to your account. You can specify the monitor's name, or let us generate one for you. Creates a monitor with an optionally specified name. For example, with Ubuntu:</p>
    
    <pre class="bash auth_token">curl -H "Authorization: Token <%= @agent_token %>" \
      -X POST -F <strong>file</strong>=@/var/lib/dpkg/status \
      "https://appcanary.com/api/v3/monitors/<strong>my-server</strong>?platform=<strong>ubuntu</strong>&amp;release=<strong>12.04</strong>"</pre>

    <h4>Required URL query parameters</h4>
    <dl class="dl-horizontal">
      <dt>name</dt>
      <dd>The name of the monitor you want to create, form encoded.
      </dd>
    </dl>

    <%= render :partial => "platform_release_parameters" %>

    <h4>Required query parameters</h4>
    <%= render :partial => "file_parameter" %>
    <hr>

    <a name="create-monitor-responses" class="anchor-offset"></a>
    <h2>Create Response</h2>
    <p>Successful requests will have a <code>201 CREATED</code> response code containing <code>application/json</code> data.</p>
    <p>All successful responses will be wrapped in a <code>"data"</code> container object.
    <p>For example, a response body will look like this:</p>
    <pre class="json">
{
  "data": {
    "id": "717",
    "type": "monitors",
    "attributes": {
      "name": "my-server",
      "vulnerable": true,
      "created-at": "2016-10-03T20:33:08.889Z"
    }
  }
}
</pre>
    
    <h4>The response container object</h4>
    <%= render :partial => "response_container_fields" %>

    <h4>Monitor object</h4>
    <%= render :partial => "monitor_fields" %>
    <hr>
    <br/>
    <br/>

    <a name="list-monitors" class="anchor-offset"></a>
    <h2>List Monitors</h2>
    <p>To list all of the monitors you have registered:</p>
    <h4><code>GET https://appcanary.com/api/v3/monitors</code></h4>

    <p>For example</p>
    
    <pre class="bash auth_token">curl -H "Authorization: Token <%= @agent_token %>" \
      https://appcanary.com/api/v3/monitors/</pre>


    <a name="list-monitors-response" class="anchor-offset"></a>
    <h2>List Monitors Response</h2>
    <p>Successful requests will have a <code>200 OK</code> response code containing <code>application/json</code> data, which shall always contain an array.</p>
    <p>All successful responses will be wrapped in a <code>"data"</code> container object.

    <p>For example, a response body will look like this:</p>
    <pre class="json">
{
  "data": [
    {
      "id": "717",
      "type": "monitors",
      "attributes": {
        "name": "my-server",
        "vulnerable": true,
        "created-at": "2016-10-03T20:33:08.889Z"
      }
    },
    {
      "id": "712",
      "type": "monitors",
      "attributes": {
        "name": "my-ruby-app",
        "vulnerable": true,
        "created-at": "2016-09-29T16:45:49.284Z"
      }
    }
  ]
}
</pre>
    
    <h4>The response container object</h4>
    <%= render :partial => "response_coll_container_fields" %>

    <h4>Monitor object</h4>
    <%= render :partial => "monitor_fields" %>

    <hr>
    <br/>
    <br/>

<a name="show-monitor" class="anchor-offset"></a>
 <h2>Show Monitor</h2>
    <p>To show details about a specific monitor:</p>
    <h4><code>GET https://appcanary.com/api/v3/monitors/<strong>:name</strong></code></h4>

    <p>For example</p>

    <pre class="bash auth_token">curl -H "Authorization: Token <%= @agent_token %>" \
      https://appcanary.com/api/v3/monitors/<strong>my-server</strong></pre>

    <h4>Required path parameters</h4>
    <%= render :partial => "monitor_name" %>

    <h2>Show Monitors Response</h2>
    <p>Successful requests will have a <code>200 OK</code> response code containing <code>application/json</code> data.</p>
    <p>All successful responses will be wrapped in a <code>"data"</code> container object.

    <p>For example, a response body will look like this:</p>
    <pre class="json">
{
  "data": {
    "id": "717",
    "type": "monitors",
    "attributes": {
      "name": "my-server",
      "vulnerable": true,
      "created-at": "2016-10-03T20:33:08.889Z"
    },
    "relationships": {
      "packages": {
        "data": [
          {
            "id": "37495",
            "type": "packages"
          }
        ]
      },
      "vulnerabilities": {
        "data": [
          {
            "id": "2239",
            "type": "vulnerabilities"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "37495",
      "type": "packages",
      "attributes": {
        "name": "rack",
        "platform": "ruby",
        "release": null,
        "version": "1.6.0",
        "upgrade-to": [
          "1.6.2"
        ]
      },
      "relationships": {
        "vulnerabilities": {
          "data": [
            {
              "id": "2239",
              "type": "vulnerabilities"
            }
          ]
        }
      }
    },
    {
      "id": "2239",
      "type": "vulnerabilities",
      "attributes": {
        "title": "Potential Denial of Service Vulnerability in Rack\n",
        "description": "Carefully crafted requests can cause a `SystemStackError` and potentially \ncause a denial of service attack. \n\nAll users running an affected release should upgrade. \n",
        "criticality": "unknown",
        "reference-ids": [
          "CVE-2015-3225"
        ]
      }
    }
  ]
}
    </pre>
    
    <h4>The response container object</h4>
    <%= render :partial => "response_container_fields" %>

    <h4>Monitor object</h4>
    <%= render :partial => "monitor_fields" %>

    <h4>Package container object</h4>
    <%= render :partial => "artifact_version_container_fields" %>

    <h4>Package attributes object</h4>
    <%= render :partial => "artifact_version_fields" %>

    <h4>Vulnerability object</h4>
    <%= render :partial => "vulnerability_fields" %>


<hr>
<br/>
<br/>


    <a name="update-monitor" class="anchor-offset"></a>
    <h2>Update a Monitor</h2>
    <p>Whenever a monitored server's or app's packages changes, you'll want to update the monitor.</p>
    <h4><code>PUT https://appcanary.com/api/v3/monitors/:name</code></h4>

    <p>Updates a monitor with the specified name with the contents of file. For example, with Ubuntu:</p>
    
    <pre class="bash auth_token">curl -H "Authorization: Token <%= @agent_token %>" \
      -X PUT -F <strong>file</strong>=@/var/lib/dpkg/status \
      https://appcanary.com/api/v3/monitors/<strong>my-server</strong></pre>


    <h4>Required path parameters</h4>
    <%= render :partial => "monitor_name" %> 

    <h4>Required query parameters</h4>
    <%= render :partial => "file_parameter" %>

    <hr>

    <a name="update-monitor-responses" class="anchor-offset"></a>
    <h2>Update Monitor Response</h2>
    <p>Successful requests will have a <code>200 OK</code> response code containing <code>application/json</code> data.</p>
    <p>All successful responses will be wrapped in a <code>"data"</code> container object.

    <p>For example, a response body will look like this:</p>
    <pre class="json">
{
  "data": {
    "id": "717",
    "type": "monitors",
    "attributes": {
      "name": "my-server",
      "vulnerable": true,
      "created-at": "2016-10-03T20:33:08.889Z"
    }
  }
}
</pre>
    
    <h4>The response container object</h4>
    <%= render :partial => "response_container_fields" %>

    <h4>Monitor object</h4>
    <%= render :partial => "monitor_fields" %>

    <hr/>
    <br/>
    <br/>

<a name="delete-monitor" class="anchor-offset"></a>
    <h2>Delete Monitor</h2>
    <p>To delete a monitor you have previously registered</p>
    <h4><code>DELETE https://appcanary.com/api/v3/monitors/<strong>:name</strong></code></h4>

    <p>For example</p>
    
    <pre class="bash auth_token">curl -H "Authorization: Token <%= @agent_token %>" \
     -X DELETE \
     https://appcanary.com/api/v3/monitors/<strong>my-server</strong></pre>

    <h2>Delete Monitor Response</h2>
    <p>Successful requests will have a <code>204 NO CONTENT</code> response code containing no data.</p>
