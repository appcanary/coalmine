class VulnerabilityLog < ActiveRecord::Base
  self.table_name = "vulnerability_logs"

  belongs_to :bundle
  belongs_to :vulnerability
  belongs_to :vulnerable_dependency

  scope :patchable, -> {
    current_scope.merge(VulnerableDependency.patchable)
  }

  scope :unpatchable, -> {
    current_scope.merge(VulnerableDependency.unpatchable)
  }

  scope :in_bundles_from, -> (account_id) {
    @previously_saved_account_id = sanitize(account_id)
    joins("INNER JOIN
          (SELECT id, agent_server_id FROM bundles WHERE bundles.account_id = #{@previously_saved_account_id}) bundles ON
          bundles.id = log_bundle_vulnerabilities.bundle_id").select("log_bundle_vulnerabilities.*").select("bundles.agent_server_id")
  }

  # todo: document
  scope :that_are_unpatched, -> {
    where("patched IS FALSE")
  }

  scope :unpatched_as_of, -> (end_at) {
    joins(:vulnerable_dependency).
      where("patched IS FALSE OR patched_at <= ?", end_at).
      where("vulnerable_dependencies.valid_at <= ?", end_at)
  }

  scope :vulnerable_after, -> (begin_at) {
    joins(:vulnerable_dependency).
      where("vulnerable_dependencies.created_at >= ?", begin_at)
  }


  scope :vulnerable_before, -> (begin_at) {
    joins(:vulnerable_dependency).
      where("vulnerable_dependencies.created_at < ?", begin_at)
  }
end
