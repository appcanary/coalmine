# == Schema Information
#
# Table name: log_bundle_vulnerabilities
#
#  id                    :integer          not null, primary key
#  bundle_id             :integer
#  package_id            :integer
#  bundled_package_id    :integer
#  vulnerability_id      :integer
#  vulnerable_package_id :integer
#  created_at            :datetime         not null
#  updated_at            :datetime         not null
#

class LogBundleVulnerability < ActiveRecord::Base
  belongs_to :bundle
  belongs_to :vulnerable_package

  # We create a log instance whenever: 
  # 1. A bundle gets created w/vuln packages
  # 2. Vulnerability that affects a package in bundle gets created
  # 3. A package that is vulnerable gets added to the bundle.

  # TODO lol optimize
  def self.record_vulnerability!(vuln_id)
    bundled_packages = BundledPackage.select('"bundled_packages".id, bundle_id, "bundled_packages".package_id, "vulnerable_packages".id vulnerable_package_id').joins('inner join "vulnerable_packages" on "vulnerable_packages".package_id = "bundled_packages".package_id').where('"vulnerable_packages".vulnerability_id = ?', vuln_id)

    bundled_packages.each do |bun|
      self.create(:bundle_id => bun.bundle_id,
                  :package_id => bun.package_id,
                  :bundled_package_id => bun.id,
                  :vulnerability_id => vuln_id,
                  :vulnerable_package_id => bun.vulnerable_package_id)
    end
  end

  def self.record_vulnerable_bundle!(bundle_id)
    BundledPackage.select('"bundled_packages".package_id, "vulnerable_packages".id').joins('inner join "vulnerable_packages" on "vulnerable_packages".package_id = "bundled_packages".package_id').where(:bundle_id => bundle_id)
  end

end
